# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3
  aws-ecs: circleci/aws-ecs@2.0

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      - run:
          name: Package
          command: |
            mvn package
      #- store_artifacts:
      #    path: /home/circleci/project/target
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build Docker Image and Deplo to Docker Hub
          command: |
            cp /home/circleci/project/target/serving-web-content-complete-0.0.1-SNAPSHOT.jar .
            dir
            docker build -t bendixon89/$IMAGE_NAME:0.1.${CIRCLE_BUILD_NUM} .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push bendixon89/$IMAGE_NAME:0.1.${CIRCLE_BUILD_NUM}
            
  update-tesk-definition:
    docker:
      - image: 'cimg/python:3.9.1'
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_SECRET_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - aws-ecs/update-task-definition:
          container-image-name-updates: 'container=web-server-task,image-and-tag=bendixon89/$IMAGE_NAME:0.1.${CIRCLE_BUILD_NUM-1}'
workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  dockertest: 
    jobs:
      - build-and-test:
          context: DockerTest
      - update-tesk-definition:
          context: DockerTest
          requires:
            - build-and-test
